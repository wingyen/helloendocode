name: Test Bild and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: loadbalancedcluster
  GKE_ZONE: europe-west3-a
  DEPLOYMENT_NAME: hello-gke
  IMAGE: europe-west3-docker.pkg.dev/artifacts-339420/test/app:latest

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
 
    - name: Test with pytest
      run: |
        pytest

  build-push-deploy:

    runs-on: ubuntu-latest
    environment: helloflask
    
    permissions:
      contents: 'read'
      id-token: 'write'
      
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.4.0'
      with:
        workload_identity_provider: 'projects/162679916614/locations/global/workloadIdentityPools/github/providers/github'
        service_account: 'deployer@artifacts-339420.iam.gserviceaccount.com'
    # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'
    - run: gcloud auth configure-docker europe-west3-docker.pkg.dev
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/helloflask:latest
          europe-west3-docker.pkg.dev/artifacts-339420/test/app:latest
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f ./web-deployment.yaml
        kubectl patch deployment hello -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
